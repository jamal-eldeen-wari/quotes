/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package quotes;

import com.google.gson.Gson;
import org.junit.jupiter.api.Test;

import java.io.*;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;

import static org.junit.jupiter.api.Assertions.*;

class LibraryTest {
    @Test void someLibraryMethodReturnsTrue() {
        Library classUnderTest = new Library();
        assertTrue(classUnderTest.someLibraryMethod(), "someLibraryMethod should return 'true'");
    }

    @Test void qoutesTest() throws FileNotFoundException {

        FileReader fileReader = new FileReader("C:\\Users\\jamal\\quotes\\recentquotes.json");
        BufferedReader bufferedReader = new BufferedReader(fileReader);

        assertNotNull(String.valueOf(bufferedReader));
    }
    @Test void QuotesConstructor(){
        Quotes quotes = new Quotes("Charles Dickens","Ask no questions, and you'll be told no lies");
        String authorTest = quotes.getAuthor();
        String textTest = quotes.getText();

        assertEquals(authorTest, quotes.getAuthor());
        assertEquals(textTest,quotes.getText());
    }

    @Test void ResponseCodeTest() throws IOException {
        URL site = new URL("http://api.forismatic.com/api/1.0/?method=getQuote&format=json&lang=en");
        HttpURLConnection connection = (HttpURLConnection) site.openConnection();
        assertEquals(200,connection.getResponseCode());
    }

   @Test void constructorOnlineQuote(){
        OnlineQoute onlineQoute = new OnlineQoute("Ask no questions, and you'll be told no lies","Charles Dickens");
        String textTest = onlineQoute.getQuoteText();
        String authorTest = onlineQoute.getQuoteAuthor();

        assertEquals(textTest, onlineQoute.getQuoteText());
        assertEquals(authorTest,onlineQoute.getQuoteAuthor());

   }
//   @Test void writeTest() throws IOException {
//       Writer writer = new FileWriter("recentquotes.json",true);
//
//   }
}
